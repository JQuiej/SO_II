name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: login_registro_db
        ports:
          - 3306:3306
        # Espera a que MySQL esté listo
        options: >-
          --health-cmd="mysqladmin ping -psecret"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    # --- Si tu proyecto no usa Composer, quita o comenta esto.
    - name: Setup PHP & Composer
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mysqli, pdo_mysql
        tools: composer

    - name: Install PHP dependencies
      # sólo corre si hay un composer.json en la raíz
      if: ${{ exists('composer.json') }}
      run: composer install --no-progress --no-interaction

    # Instalamos Docker Compose (si tu runner no lo trae)
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin

    - name: Build & start services
      # Usa el plugin de Compose v2: 'docker compose' en lugar de 'docker-compose'
      run: docker compose up -d --build

    - name: Wait for web
      run: |
        # Espera a que tu contenedor web responda algo en el puerto 80/8080
        for i in {1..10}; do
          if curl -s http://localhost:8080 >/dev/null; then
            echo "Web is up!"
            exit 0
          fi
          sleep 5
        done
        echo "Web did not start in time" >&2
        exit 1

    # Aquí tus tests, pings, etc.
    - name: Smoke test: homepage
      run: curl -sSf http://localhost:8080/index.php
